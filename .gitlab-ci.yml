# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

unit-test-job:
  tags:
    - docker
  image: eclipse-temurin:17
  stage: test
  script:
    - echo "Attempting to run unit tests..."    
    - javac -d bin src/cosc202/andie/*.java src/cosc202/andie/lang/*.java src/cosc202/andie/colour/*.java src/cosc202/andie/edit/*.java src/cosc202/andie/file/*.java src/cosc202/andie/filter/*.java src/cosc202/andie/help/*.java src/cosc202/andie/image/*.java src/cosc202/andie/view/*.java
    - javac -d bin -classpath
      bin:lib/junit-platform-console-standalone-1.9.2.jar
      src/test/cosc202/andie/*.java src/cosc202/andie/lang/*.java
    - cp -r src/cosc202/andie/lang/MessageBundles/*.properties bin/cosc202/andie/lang
    - java -jar lib/junit-platform-console-standalone-1.9.2.jar -classpath
      bin --select-package test.cosc202.andie

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

pages: # publish Javadoc website
    tags:
        - docker
    image: eclipse-temurin:17
    stage: build
    script:
        - javadoc -Xdoclint:syntax,html -d docs src/cosc202/andie/*.java src/cosc202/andie/lang/*.java src/cosc202/andie/colour/*.java src/cosc202/andie/edit/*.java src/cosc202/andie/file/*.java src/cosc202/andie/filter/*.java src/cosc202/andie/help/*.java src/cosc202/andie/image/*.java src/cosc202/andie/view/*.java src/cosc202/andie/test/*.java
        - mkdir public
        - echo 'test' >public/test.txt
        - mv docs public/
        - ls -R public | head
        - echo 'first ten public/ files listed'
    artifacts:
        paths:
        - public
    only:
        - main